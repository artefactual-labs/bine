setup .bine.json
! exec bine get
! stdout .
stderr 'get requires one argument'

#
# Downloads binary.
#

bine get perpignan
cmpenv stdout ../get-perpignan
! stderr .

exec ls $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin
stdout 'perpignan\n'

exec $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stderr 'hello world\!'

#
# Builds Go binary.
#

setup .bine-with-go-package.json
bine get perpignan
cmpenv stdout ../get-perpignan
! stderr .

exec ls $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin
stdout 'perpignan\n'

exec $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'Hello world\!\n'

setup .bine-with-unbuildable-go-package.json
! bine get perpignan
! stdout .
stderr 'failed to install Go tool'

#
# Implements the ariga provider.
#

setup .bine-with-ariga-binary.json

bine get atlas

bine list --installed
stdout 'atlas v0\.31\.0'
! stderr .

bine list --outdated
cmp stdout ../atlas-ariga-outdated
! stderr .

#
# Extraction.
#

setup .bine-with-temporal-binary.json
bine get temporal-cli
cmpenv stdout ../get-temporal-cli
! stderr .

#
# Compatibility without semver.
#

setup .bine-with-jq-binary.json
bine get jq
cmpenv stdout ../get-jq
! stderr .

#
# Performs upgrade.
#

setup .bine-with-perpignan.v1.0.2.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.2'
config .bine-with-perpignan.v1.0.3.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.3'

#
# Performs upgrade with empty marker.
# bine used to populate an empty marker - we confirm backward compatibilty.
#

setup .bine-with-perpignan.v1.0.2.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.2'
exec bash -c 'cat /dev/null > $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/versions/perpignan/1.0.2'
config .bine-with-perpignan.v1.0.3.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.3'

#
# Performs downgrade.
#

setup .bine-with-perpignan.v1.0.3.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.3'
config .bine-with-perpignan.v1.0.2.json
bine get perpignan
exec go version -m $WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
stdout 'mod\tgithub\.com\/sevein\/perpignan\tv1\.0\.2'

-- .bine.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "url": "https://github.com/sevein/perpignan",
            "version": "1.0.0",
            "asset_pattern": "{name}_{version}_{goos}_{goarch}"
        }
    ]
}
-- .bine-with-perpignan.v1.0.2.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "url": "https://github.com/sevein/perpignan",
            "version": "1.0.2",
            "asset_pattern": "{name}_{version}_{goos}_{goarch}"
        }
    ]
}
-- .bine-with-perpignan.v1.0.3.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "url": "https://github.com/sevein/perpignan",
            "version": "1.0.3",
            "asset_pattern": "{name}_{version}_{goos}_{goarch}"
        }
    ]
}
-- .bine-with-invalid-version.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "url": "https://github.com/sevein/perpignan",
            "version": "latest", // Use of "latest" is not allowed.
            "asset_pattern": "{name}_{version}_{goos}_{goarch}"
        }
    ]
}
-- .bine-with-go-package.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "go_package": "github.com/sevein/perpignan",
            "version": "1.0.2"
        }
    ]
}
-- .bine-with-unbuildable-go-package.json --
{
    "project": "test",
    "bins": [
        {
            "name": "perpignan",
            "go_package": "github.com/sevein/perpignan",
            // This version won't build as a Go package because the module
            // directive wasn't properly named. It can be used to test
            // error handling during the build.
            "version": "1.0.1"
        }
    ]
}
-- .bine-with-ariga-binary.json --
{
    "project": "test",
    "bins": [
        {
            "name": "atlas",
            "version": "0.31.0",
            "url": "https://release.ariga.io/atlas",
            "asset_pattern": "atlas-{goos}-{goarch}-v{version}"
        }
    ]
}
-- .bine-with-temporal-binary.json --
{
    "project": "test",
    "bins": [
        // The archive contains two files: LICENSE and temporal.
        // We test that bine can find the "temporal" binary given that the
        // name attribute is named "temporal-cli".
        {
            "name": "temporal-cli",
            "url": "https://github.com/temporalio/cli",
            "version": "0.10.6",
            "asset_pattern": "temporal_cli_{version}_{goos}_{goarch}.tar.gz"
        }
    ]
}
-- .bine-with-jq-binary.json --
{
    "project": "test",
    "bins": [
        {
            "name": "jq",
            "url": "https://github.com/jqlang/jq",
            "version": "jq-1.7.1",
            "asset_pattern": "{name}-{goos}-{goarch}"
        }
    ]
}
-- get-temporal-cli --
$WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/temporal-cli
-- get-jq --
$WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/jq
-- get-perpignan --
$WORK/.tmp/homedir/.cache/bine/test/linux/amd64/bin/perpignan
-- atlas-ariga-outdated --
atlas v0.31.0 Â» v0.33.0
